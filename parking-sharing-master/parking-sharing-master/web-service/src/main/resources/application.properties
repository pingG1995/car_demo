
spring.application.name=web-service
server.port=8082

#apollo配置
#app.id=bc-alarm-flow
#apollo.meta=http://10.154.8.25:18070
#apollo.bootstrap.enabled = true
#apollo.bootstrap.namespaces = application


###### druid connection pool configurations
spring.datasource.druid.url=jdbc:postgresql://10.139.5.215/hitch
#spring.datasource.druid.username=postgres
#spring.datasource.druid.password=123@x?
spring.datasource.druid.username=ENC(021MR6SPHBiKDld2pmVgh5TYuoTTwMbS)
spring.datasource.druid.password=ENC(gDd5jovZUccdaCzSz+QhaA==)
spring.datasource.druid.driver-class-name=org.postgresql.Driver
spring.datasource.druid.initial-size=10
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=8
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=2000

mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#### mybatis
mybatis.mapper-locations=classpath*:mapper/*.xml

#app.cors = true
jasypt.encryptor.password = G0CvDz7oJn67sncklUKai09OI

##kafka
##spring.kafka.bootstrap-servers = http://10.154.8.27:9092
#spring.kafka.bootstrap-servers= ops0016:6667,ops0017:6667,ops0018:6667
#spring.kafka.userPrincipal= kafka/ops0017@BCHKDC
##spring.kafka.keyTabPath= ./kafka.service.keytab
#spring.kafka.keyTabPath= D:/conf/kafka.service.keytab
#spring.kafka.serverName= kafka
#spring.kafka.auth= true
##spring.kafka.krb5= ./krb5.conf
#spring.kafka.krb5= D:/conf/krb5.conf
#spring.kafka.rules.sync.topic = pms-rules-sync-topic
#
## producer
#spring.kafka.producer.retries = 0
#spring.kafka.producer.batch-size = 16384
#spring.kafka.producer.buffer-memory = 33554432
#spring.kafka.producer.client-id = alarm-operation
#spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
#
##consumer
#spring.kafka.consumer.group-id = test
#spring.kafka.consumer.auto-offset-reset= latest
#spring.kafka.consumer.enable-auto-commit = false
#spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
##kafka topic
#operate.topic = ops_operate_topic
#relate.topic = ops_control_topic
#topics = ops_operate_topic,ops_relate_topic
#
##Redis相关配置
##spring.redis.host=10.154.5.134
##spring.redis.port=6379
#spring.redis.password=bc-ops-1qaz
##哨兵模式
#spring.redis.sentinel.master=mymaster
#spring.redis.sentinel.nodes=10.154.5.134:26379,10.154.5.145:26379,10.154.5.167:26379
## 连接超时时间（毫秒）
#spring.redis.timeout=10000
## Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
#spring.redis.database=1
## 连接池最大连接数（使用负值表示没有限制） 默认 8
#spring.redis.lettuce.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
#spring.redis.lettuce.pool.max-wait=-1
## 连接池中的最大空闲连接 默认 8
#spring.redis.lettuce.pool.max-idle=8
## 连接池中的最小空闲连接 默认 0
#spring.redis.lettuce.pool.min-idle=0
#
## eureka
#eureka.client.service-url.defaultZone = http://10.154.5.119:8761/eureka/
#eureka.instance.preferIpAddress = true
#
#fgm.service.name.ac = system-ac-service
#fgm.service.name.member = system-member-service
#fgm.service.name.captcha = system-captcha-service
#fgm.service.name.security = system-security-service
#fgm.service.name.sys = system-sys-service


